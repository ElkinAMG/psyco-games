Math.minmax=(e,l)=>Math.max(Math.min(e,l),-l);const distance2D=(e,l)=>Math.sqrt((l.x-e.x)**2+(l.y-e.y)**2),getAngle=(e,l)=>{let o=Math.atan((l.y-e.y)/(l.x-e.x));return l.x-e.x<0&&(o+=Math.PI),o},closestItCanBe=(e,l)=>{let o=getAngle(e,l);const t=Math.cos(o)*(wallW/2+ballSize/2),n=Math.sin(o)*(wallW/2+ballSize/2);return{x:e.x+t,y:e.y+n}},rollAroundCap=(e,l)=>{let o=getAngle(l,e),t=o-getAngle({x:0,y:0},{x:l.velocityX,y:l.velocityY});const n=distance2D({x:0,y:0},{x:l.velocityX,y:l.velocityY}),a=Math.sin(t)*n,i=wallW/2+ballSize/2,r=Math.atan(a/i),c=Math.cos(o+Math.PI-r)*i,s=Math.sin(o+Math.PI-r)*i,m=l.x,h=l.y,y=l.x-(e.x+c),x=l.y-(e.y+s);return{x:m,y:h,velocityX:y,velocityY:x,nextX:m+y,nextY:h+x}},slow=(e,l)=>Math.abs(e)<=l?0:e>l?e-l:e+l,mazeElement=document.getElementById("maze"),joystickHeadElement=document.getElementById("joystick-head"),noteElement=document.getElementById("note");let previousTimestamp,gameInProgress,mouseStartX,mouseStartY,accelerationX,accelerationY,frictionX,frictionY,hardMode=!1;const pathW=25,wallW=10,ballSize=10,holeSize=18,debugMode=!1;let balls=[],ballElements=[],holeElements=[];resetGame(),balls.forEach((({x:e,y:l})=>{const o=document.createElement("div");o.setAttribute("class","ball"),o.style.cssText=`left: ${e}px; top: ${l}px; `,mazeElement.appendChild(o),ballElements.push(o)}));const walls=[{column:0,row:0,horizontal:!0,length:10},{column:0,row:0,horizontal:!1,length:9},{column:0,row:9,horizontal:!0,length:10},{column:10,row:0,horizontal:!1,length:9},{column:0,row:6,horizontal:!0,length:1},{column:0,row:8,horizontal:!0,length:1},{column:1,row:1,horizontal:!0,length:2},{column:1,row:7,horizontal:!0,length:1},{column:2,row:2,horizontal:!0,length:2},{column:2,row:4,horizontal:!0,length:1},{column:2,row:5,horizontal:!0,length:1},{column:2,row:6,horizontal:!0,length:1},{column:3,row:3,horizontal:!0,length:1},{column:3,row:8,horizontal:!0,length:3},{column:4,row:6,horizontal:!0,length:1},{column:5,row:2,horizontal:!0,length:2},{column:5,row:7,horizontal:!0,length:1},{column:6,row:1,horizontal:!0,length:1},{column:6,row:6,horizontal:!0,length:2},{column:7,row:3,horizontal:!0,length:2},{column:7,row:7,horizontal:!0,length:2},{column:8,row:1,horizontal:!0,length:1},{column:8,row:2,horizontal:!0,length:1},{column:8,row:3,horizontal:!0,length:1},{column:8,row:4,horizontal:!0,length:2},{column:8,row:8,horizontal:!0,length:2},{column:1,row:1,horizontal:!1,length:2},{column:1,row:4,horizontal:!1,length:2},{column:2,row:2,horizontal:!1,length:2},{column:2,row:5,horizontal:!1,length:1},{column:2,row:7,horizontal:!1,length:2},{column:3,row:0,horizontal:!1,length:1},{column:3,row:4,horizontal:!1,length:1},{column:3,row:6,horizontal:!1,length:2},{column:4,row:1,horizontal:!1,length:2},{column:4,row:6,horizontal:!1,length:1},{column:5,row:0,horizontal:!1,length:2},{column:5,row:6,horizontal:!1,length:1},{column:5,row:8,horizontal:!1,length:1},{column:6,row:4,horizontal:!1,length:1},{column:6,row:6,horizontal:!1,length:1},{column:7,row:1,horizontal:!1,length:4},{column:7,row:7,horizontal:!1,length:2},{column:8,row:2,horizontal:!1,length:1},{column:8,row:4,horizontal:!1,length:2},{column:9,row:1,horizontal:!1,length:1},{column:9,row:5,horizontal:!1,length:2}].map((e=>({x:e.column*(25+wallW),y:e.row*(25+wallW),horizontal:e.horizontal,length:e.length*(25+wallW)})));walls.forEach((({x:e,y:l,horizontal:o,length:t})=>{const n=document.createElement("div");n.setAttribute("class","wall"),n.style.cssText=`\n        left: ${e}px;\n        top: ${l}px;\n        width: ${wallW}px;\n        height: ${t}px;\n        transform: rotate(${o?-90:0}deg);\n      `,mazeElement.appendChild(n)}));const holes=[{column:0,row:5},{column:2,row:0},{column:2,row:4},{column:4,row:6},{column:6,row:2},{column:6,row:8},{column:8,row:1},{column:8,row:2}].map((e=>({x:e.column*(wallW+25)+(wallW/2+12.5),y:e.row*(wallW+25)+(wallW/2+12.5)})));function resetGame(){previousTimestamp=void 0,gameInProgress=!1,mouseStartX=void 0,mouseStartY=void 0,accelerationX=void 0,accelerationY=void 0,frictionX=void 0,frictionY=void 0,mazeElement.style.cssText="\n        transform: rotateY(0deg) rotateX(0deg)\n      ",joystickHeadElement.style.cssText="\n        left: 0;\n        top: 0;\n        animation: glow;\n        cursor: grab;\n      ",noteElement.innerHTML=hardMode?"Clicka el joystick para iniciar!\n          <p>Modo difícil, evita caer en los huecos. <br> ¿Quieres volver al fácil? Presiona E</p>":"Clicka el joystick para iniciar!\n          <p>Mueve todas los circulos al centro. <br> ¿Preparado para el modo difícil? Presiona H</p>",noteElement.style.opacity=1,balls=[{column:0,row:0},{column:9,row:0},{column:0,row:8},{column:9,row:8}].map((e=>({x:e.column*(wallW+25)+(wallW/2+12.5),y:e.row*(wallW+25)+(wallW/2+12.5),velocityX:0,velocityY:0}))),ballElements.length&&balls.forEach((({x:e,y:l},o)=>{ballElements[o].style.cssText=`left: ${e}px; top: ${l}px; `})),holeElements.forEach((e=>{mazeElement.removeChild(e)})),holeElements=[],hardMode&&holes.forEach((({x:e,y:l})=>{const o=document.createElement("div");o.setAttribute("class","black-hole"),o.style.cssText=`left: ${e}px; top: ${l}px; `,mazeElement.appendChild(o),holeElements.push(o)}))}function main(e){if(!gameInProgress)return;if(void 0===previousTimestamp)return previousTimestamp=e,void window.requestAnimationFrame(main);const l=(e-previousTimestamp)/16;try{if(null!=accelerationX&&null!=accelerationY){const e=accelerationX*l,o=accelerationY*l,t=frictionX*l,n=frictionY*l;balls.forEach((l=>{0==e?l.velocityX=slow(l.velocityX,t):(l.velocityX=l.velocityX+e,l.velocityX=Math.max(Math.min(l.velocityX,1.5),-1.5),l.velocityX=l.velocityX-Math.sign(e)*t,l.velocityX=Math.minmax(l.velocityX,1.5)),0==o?l.velocityY=slow(l.velocityY,n):(l.velocityY=l.velocityY+o,l.velocityY=l.velocityY-Math.sign(o)*n,l.velocityY=Math.minmax(l.velocityY,1.5)),l.nextX=l.x+l.velocityX,l.nextY=l.y+l.velocityY,walls.forEach(((e,o)=>{if(e.horizontal){if(l.nextY+ballSize/2>=e.y-wallW/2&&l.nextY-ballSize/2<=e.y+wallW/2){const o={x:e.x,y:e.y},t={x:e.x+e.length,y:e.y};if(l.nextX+ballSize/2>=o.x-wallW/2&&l.nextX<o.x){if(distance2D(o,{x:l.nextX,y:l.nextY})<ballSize/2+wallW/2){const e=closestItCanBe(o,{x:l.nextX,y:l.nextY}),t=rollAroundCap(o,{x:e.x,y:e.y,velocityX:l.velocityX,velocityY:l.velocityY});Object.assign(l,t)}}if(l.nextX-ballSize/2<=t.x+wallW/2&&l.nextX>t.x){if(distance2D(t,{x:l.nextX,y:l.nextY})<ballSize/2+wallW/2){const e=closestItCanBe(t,{x:l.nextX,y:l.nextY}),o=rollAroundCap(t,{x:e.x,y:e.y,velocityX:l.velocityX,velocityY:l.velocityY});Object.assign(l,o)}}l.nextX>=o.x&&l.nextX<=t.x&&(l.nextY<e.y?l.nextY=e.y-wallW/2-ballSize/2:l.nextY=e.y+wallW/2+ballSize/2,l.y=l.nextY,l.velocityY=-l.velocityY/3)}}else if(l.nextX+ballSize/2>=e.x-wallW/2&&l.nextX-ballSize/2<=e.x+wallW/2){const o={x:e.x,y:e.y},t={x:e.x,y:e.y+e.length};if(l.nextY+ballSize/2>=o.y-wallW/2&&l.nextY<o.y){if(distance2D(o,{x:l.nextX,y:l.nextY})<ballSize/2+wallW/2){const e=closestItCanBe(o,{x:l.nextX,y:l.nextY}),t=rollAroundCap(o,{x:e.x,y:e.y,velocityX:l.velocityX,velocityY:l.velocityY});Object.assign(l,t)}}if(l.nextY-ballSize/2<=t.y+wallW/2&&l.nextY>t.y){if(distance2D(t,{x:l.nextX,y:l.nextY})<ballSize/2+wallW/2){const e=closestItCanBe(t,{x:l.nextX,y:l.nextY}),o=rollAroundCap(t,{x:e.x,y:e.y,velocityX:l.velocityX,velocityY:l.velocityY});Object.assign(l,o)}}l.nextY>=o.y&&l.nextY<=t.y&&(l.nextX<e.x?l.nextX=e.x-wallW/2-ballSize/2:l.nextX=e.x+wallW/2+ballSize/2,l.x=l.nextX,l.velocityX=-l.velocityX/3)}})),hardMode&&holes.forEach(((e,o)=>{if(distance2D(e,{x:l.nextX,y:l.nextY})<=9)throw holeElements[o].style.backgroundColor="red",Error("The ball fell into a hole")})),l.x=l.x+l.velocityX,l.y=l.y+l.velocityY})),balls.forEach((({x:e,y:l},o)=>{ballElements[o].style.cssText=`left: ${e}px; top: ${l}px; `}))}balls.every((e=>distance2D(e,{x:175,y:157.5})<32.5))?(noteElement.innerHTML=`Felicidades, lo conseguiste!!\n          ${hardMode?"":"<p>Presiona H para el modo difícil"} <br>o Presiona espacio para volver a jugar </p>`,noteElement.style.opacity=1,gameInProgress=!1):(previousTimestamp=e,window.requestAnimationFrame(main))}catch(e){if("The ball fell into a hole"!=e.message)throw e;noteElement.innerHTML="Un circulo rojo cayo en el hueco! Presiona espacio para volver a jugar.\n          <p>\n            ¿Quieres volver al fácil? Presiona E\n          </p>",noteElement.style.opacity=1,gameInProgress=!1}}joystickHeadElement.addEventListener("mousedown",(function(e){gameInProgress||(mouseStartX=e.clientX,mouseStartY=e.clientY,gameInProgress=!0,window.requestAnimationFrame(main),noteElement.style.opacity=0,joystickHeadElement.style.cssText="\n          animation: none;\n          cursor: grabbing;\n        ")})),window.addEventListener("mousemove",(function(e){if(gameInProgress){const l=-Math.minmax(mouseStartX-e.clientX,15),o=-Math.minmax(mouseStartY-e.clientY,15);joystickHeadElement.style.cssText=`\n          left: ${l}px;\n          top: ${o}px;\n          animation: none;\n          cursor: grabbing;\n        `;const t=.8*l,n=.8*o;mazeElement.style.cssText=`\n          transform: rotateY(${t}deg) rotateX(${-n}deg)\n        `;const a=2,i=.01;accelerationX=a*Math.sin(t/180*Math.PI),accelerationY=a*Math.sin(n/180*Math.PI),frictionX=a*Math.cos(t/180*Math.PI)*i,frictionY=a*Math.cos(n/180*Math.PI)*i}})),window.addEventListener("keydown",(function(e){if([" ","H","h","E","e"].includes(e.key)){if(e.preventDefault()," "!=e.key)return"H"==e.key||"h"==e.key?(hardMode=!0,void resetGame()):"E"==e.key||"e"==e.key?(hardMode=!1,void resetGame()):void 0;resetGame()}}));